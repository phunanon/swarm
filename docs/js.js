/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function() {


var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var scale = 6;
var speed = 1;
var screamRadius = 16;
var ants = [];
var foods = [];
var walls = [];
var newHome = { x: 0, y: 0 };
var home = { x: 0, y: 0, radius: 4 };
var collected = 0;
var w = function () { return document.body.offsetWidth / scale; };
var h = function () { return document.body.offsetHeight / scale; };
window.addEventListener('DOMContentLoaded', function () {
    var _a;
    var ctx = (_a = document.querySelector('canvas')) === null || _a === void 0 ? void 0 : _a.getContext('2d');
    if (!ctx)
        return;
    ctx.canvas.addEventListener('mousemove', function (e) {
        newHome.x = e.offsetX / scale;
        newHome.y = e.offsetY / scale;
    });
    document.body.addEventListener('keyup', function (e) {
        if (e.key === ' ') {
            home.x = newHome.x;
            home.y = newHome.y;
        }
    });
    ants.push.apply(ants, new Array(512).fill(0).map(function () { return (__assign(__assign({ x: Math.random() * w(), y: Math.random() * h() }, { home: 0, food: 0, carrying: false }), { direction: Math.random() * Math.PI * 2 })); }));
    foods.push.apply(foods, new Array(3).fill(0).map(function () { return ({
        x: Math.random() * w(),
        y: Math.random() * h(),
        radius: 4,
        direction: Math.random() * Math.PI * 2,
    }); }));
    walls.push.apply(walls, new Array(8).fill(0).map(function () {
        var _a = [Math.random() * w(), Math.random() * h()], x = _a[0], y = _a[1];
        var horizontal = Math.random() > 0.5;
        return {
            a: { x: x, y: y },
            b: {
                x: x + 4 + Math.random() * (horizontal ? 64 : 0),
                y: y + 4 + Math.random() * (horizontal ? 0 : 64),
            },
        };
    }));
    home.x = 32;
    home.y = h() / 2;
    Render(ctx);
});
var Render = function (ctx) {
    var width = document.body.offsetWidth;
    var height = document.body.offsetHeight;
    ctx.canvas.style.width = "".concat((ctx.canvas.width = width));
    ctx.canvas.style.height = "".concat((ctx.canvas.height = height));
    ctx.fillStyle = 'rgba(255, 255, 255, 0.25)';
    ctx.fillRect(0, 0, width, height);
    ctx.save();
    ctx.scale(scale, scale);
    ants.forEach(function (ant) {
        ctx.fillStyle = ant.carrying ? 'red' : 'black';
        ctx.fillRect(ant.x, ant.y, 1, 1);
    });
    ctx.fillStyle = 'blue';
    foods.forEach(function (food) {
        ctx.beginPath();
        ctx.arc(food.x, food.y, food.radius, 0, 2 * Math.PI);
        ctx.fill();
    });
    ctx.fillStyle = 'black';
    walls.forEach(function (wall) {
        ctx.fillRect(wall.a.x, wall.a.y, wall.b.x - wall.a.x, wall.b.y - wall.a.y);
    });
    ctx.fillStyle = 'green';
    ctx.beginPath();
    ctx.arc(home.x, home.y, home.radius, 0, 2 * Math.PI);
    ctx.fill();
    var updates = Update();
    updates.forEach(function (_a) {
        var x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3], food = _a[4], home = _a[5];
        ctx.strokeStyle = "rgba(".concat(food && home ? 128 : 0, ", ").concat(food && !home ? 0 : 128, ", ").concat(food && !home ? 128 : 0, ", 0.05)");
        ctx.beginPath();
        ctx.moveTo(x1 + 0.5, y1 + 0.5);
        ctx.lineTo(x2 + 0.5, y2 + 0.5);
        ctx.stroke();
    });
    ctx.fillStyle = 'black';
    ctx.font = '8px monospace';
    ctx.fillText("Collected ".concat(collected), 2, 8);
    ctx.restore();
    setTimeout(function () { return Render(ctx); }, 10);
};
var near = function (a, b, radius) {
    return a.x > b.x - radius &&
        a.x < b.x + radius &&
        a.y > b.y - radius &&
        a.y < b.y + radius;
};
/** Moves an object and bounces it off the canvas bounds */
var move = function (vec, radius, speedMult) {
    if (radius === void 0) { radius = 0; }
    if (speedMult === void 0) { speedMult = 1; }
    vec.x += Math.cos(vec.direction) * speed * speedMult;
    vec.y += Math.sin(vec.direction) * speed * speedMult;
    if (vec.x < radius) {
        vec.x = radius;
        vec.direction = Math.PI - vec.direction;
    }
    if (vec.x + radius > w()) {
        vec.x = w() - radius;
        vec.direction = Math.PI - vec.direction;
    }
    if (vec.y < radius) {
        vec.y = radius;
        vec.direction = -vec.direction;
    }
    if (vec.y + radius > h()) {
        vec.y = h() - radius;
        vec.direction = -vec.direction;
    }
};
var Update = function () {
    var updates = [];
    foods.forEach(function (food) { return move(food, food.radius, 0.2); });
    ants.forEach(function (ant) {
        move(ant);
        walls.forEach(function (wall) {
            var inX = ant.x > wall.a.x && ant.x < wall.b.x;
            var x0d = inX ? ant.x - wall.a.x : 0;
            var x1d = inX ? wall.b.x - ant.x : 0;
            var inY = ant.y > wall.a.y && ant.y < wall.b.y;
            var y0d = inY ? ant.y - wall.a.y : 0;
            var y1d = inY ? wall.b.y - ant.y : 0;
            if (inX && inY) {
                //Check if hit top or bottom sides
                if (Math.min(y0d, y1d) < Math.min(x0d, x1d)) {
                    ant.direction = -ant.direction;
                }
                else {
                    ant.direction = Math.PI - ant.direction;
                }
                move(ant);
            }
        });
        if (near(ant, home, home.radius) && ant.carrying) {
            ant.carrying = false;
            ant.home = 0;
            ant.direction += Math.PI;
            ++collected;
        }
        if (!ant.carrying) {
            foods.forEach(function (food) {
                if (near(ant, food, food.radius)) {
                    ant.carrying = true;
                    ant.food = 0;
                    ant.direction += Math.PI;
                    food.radius -= 0.001;
                    if (food.radius < 1) {
                        food.x = Math.random() * w();
                        food.y = Math.random() * h();
                        food.radius = 4;
                        food.direction = Math.random() * Math.PI * 2;
                    }
                }
            });
        }
        ++ant.food;
        ++ant.home;
    });
    ants.forEach(function (ant) {
        ants.forEach(function (other) {
            if (ant === other)
                return;
            if (!near(ant, other, screamRadius))
                return;
            var f = ant.food + screamRadius;
            var h = ant.home + screamRadius;
            var closerFood = f < other.food;
            var closerHome = h < other.home;
            var goFood = !other.carrying && closerFood;
            var goHome = other.carrying && closerHome;
            var newDir = Math.atan2(ant.y - other.y, ant.x - other.x) +
                Math.random() * 0.5 -
                0.25;
            if (closerFood) {
                other.food = f;
            }
            else if (closerHome) {
                other.home = h;
            }
            if (closerFood || closerHome) {
                updates.push([ant.x, ant.y, other.x, other.y, closerFood, closerHome]);
            }
            if (goFood || goHome) {
                other.direction = newDir;
            }
        });
    });
    return updates;
};


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.ts"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,